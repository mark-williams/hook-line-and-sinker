// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`article-search snapshot renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ArticleSearch />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <h1>
          Article Search
        </h1>,
        <ForwardRef>
          <label
            htmlFor="searchTerm"
          >
            Search for:
          </label>
          <ForwardRef
            id="searchTerm"
            name="searchTerm"
            type="text"
          />
          <ForwardRef
            onClick={[Function]}
          >
            Search
          </ForwardRef>
        </ForwardRef>,
        <h3>
          Here are a list of articles matching your search:
        </h3>,
        <div
          className="articles"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Article Search",
        },
        "ref": null,
        "rendered": "Article Search",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <label
              htmlFor="searchTerm"
            >
              Search for:
            </label>,
            <ForwardRef
              id="searchTerm"
              name="searchTerm"
              type="text"
            />,
            <ForwardRef
              onClick={[Function]}
            >
              Search
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Search for:",
              "htmlFor": "searchTerm",
            },
            "ref": null,
            "rendered": "Search for:",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": "searchTerm",
              "name": "searchTerm",
              "type": "text",
            },
            "ref": Object {
              "current": undefined,
            },
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": true,
                "rules": Array [
                  "
  width: 20rem;
  height: 2rem;
  border-radius: 4px;
  margin-right: 0.6rem;
  font-size: 1rem;
  padding-left: 0.5rem;
",
                ],
              },
              "displayName": "styled.input",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "input",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Search",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Search",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": true,
                "rules": Array [
                  "
  background-color: hsl(112, 52%, 40%);
  color: white;
  min-width: 4rem;
  padding: 0.5em 0.6rem;
  font-size: 1rem;
  border-radius: 0.4em;
",
                ],
              },
              "displayName": "styled.button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  label {
    margin-right: 0.6rem;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Here are a list of articles matching your search:",
        },
        "ref": null,
        "rendered": "Here are a list of articles matching your search:",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "articles",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <h1>
            Article Search
          </h1>,
          <ForwardRef>
            <label
              htmlFor="searchTerm"
            >
              Search for:
            </label>
            <ForwardRef
              id="searchTerm"
              name="searchTerm"
              type="text"
            />
            <ForwardRef
              onClick={[Function]}
            >
              Search
            </ForwardRef>
          </ForwardRef>,
          <h3>
            Here are a list of articles matching your search:
          </h3>,
          <div
            className="articles"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Article Search",
          },
          "ref": null,
          "rendered": "Article Search",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <label
                htmlFor="searchTerm"
              >
                Search for:
              </label>,
              <ForwardRef
                id="searchTerm"
                name="searchTerm"
                type="text"
              />,
              <ForwardRef
                onClick={[Function]}
              >
                Search
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Search for:",
                "htmlFor": "searchTerm",
              },
              "ref": null,
              "rendered": "Search for:",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": "searchTerm",
                "name": "searchTerm",
                "type": "text",
              },
              "ref": Object {
                "current": undefined,
              },
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": true,
                  "rules": Array [
                    "
  width: 20rem;
  height: 2rem;
  border-radius: 4px;
  margin-right: 0.6rem;
  font-size: 1rem;
  padding-left: 0.5rem;
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Search",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Search",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": true,
                  "rules": Array [
                    "
  background-color: hsl(112, 52%, 40%);
  color: white;
  min-width: 4rem;
  padding: 0.5em 0.6rem;
  font-size: 1rem;
  border-radius: 0.4em;
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
  label {
    margin-right: 0.6rem;
  }
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Here are a list of articles matching your search:",
          },
          "ref": null,
          "rendered": "Here are a list of articles matching your search:",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "articles",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
